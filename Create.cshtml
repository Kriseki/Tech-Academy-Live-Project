@model JobPlacementDashboard.Models.JPStudent

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="container">
    @if (!User.Identity.IsAuthenticated)
    {
        <p style="color: red !important;">Please log-in to your LMS account to access the Create page. You will be redirected to the Create page once you log in.</p>
    }
    <br />
    <div class="form-horizontal">
        <div id="inline1">
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" id="inline1">
            @*@Html.LabelFor(model => model.JPName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label for="student-name">@Html.LabelFor(model => model.JPName)</label>
            <div id="student-name">
                @Html.EditorFor(model => model.JPName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JPName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="student-email">@Html.LabelFor(model => model.JPEmail)</label>
            <div id="student-email">
                @Html.EditorFor(model => model.JPEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JPEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="student-location">@Html.LabelFor(model => model.JPStudentLocation)</label>
            <div id="student-location">
                @Html.EnumDropDownListFor(model => model.JPStudentLocation, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JPStudentLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="student-linkedIn">@Html.LabelFor(model => model.JPLinkedIn)</label>
            <div id="student-linkedIn">
                @Html.EditorFor(model => model.JPLinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JPLinkedIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="student-portfolio">@Html.LabelFor(model => model.JPPortfolio)</label>
            <div id="student-portfolio">
                @Html.EditorFor(model => model.JPPortfolio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JPPortfolio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="student-github">@Html.LabelFor(model => model.JPGithubLink)</label>
            <div id="student-github">
                @Html.EditorFor(model => model.JPGithubLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JPGithubLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="inline1">
            <label for="contact-agreement">@Html.LabelFor(model => model.JPContact)</label>
            <div id="contact-agreement">
                <div class="checkbox" id="check">
                    <span>
                        @Html.CheckBoxFor(model => model.JPContact) Are you open to being contacted by other students of the Tech Academy after you get hired for purposes of networking?
                    </span>
                    @Html.ValidationMessageFor(model => model.JPContact, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @if (User.Identity.IsAuthenticated)
        {
            <div class="form-group" id="inline1">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        }
        else
        {
            <div class="form-group" id="inline1">
                <div class="text-center">
                    <a href="http://localhost:51507/Account/Register">You must be registered and logged in before you can create a new student.</a>
                </div>
            </div>
        }
    </div>
</div>

        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
